name: Release

on:
  workflow_run:
    workflows: ['Test']
    types: [completed]
    branches:
      - main
  workflow_dispatch:

jobs:
  release:
    strategy:
      matrix:
        os: [Linux]
    runs-on: [ self-hosted, "${{ matrix.os }}" ]
    defaults:
      run:
        shell: bash
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      contents: write
    steps:
      - name: Log masks on Linux
        if: matrix.os == 'Linux'
        run: echo "::add-mask::$NAME_MASK"

      - name: Log masks on Windows
        if: matrix.os == 'Windows'
        run: echo "::add-mask::$env:NAME_MASK"

      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: mlugg/setup-zig@v2
        with:
          version: master

      - uses: actions/github-script@v7
        id: parse-version
        env:
          SHA: '${{env.parentSHA}}'
        with:
          script: |
            const script = require('./.github/workflows/zig-version.js');
            await script({core});

      - name: Check Existing Releases
        id: check-version
        run: |
          echo "EXISTS=$( \
            if gh release view ${VERSION} | grep -q "${VERSION}"; \
            then echo "exists"; \
            else echo ""; \
            fi)" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Windows
        if: ${{ steps.check-version.outputs.EXISTS == '' }}
        run: |
          zig build \
            -Doptimize=ReleaseSafe \
            -Dmcl=false \
            -Dtarget=x86_64-windows-msvc
          zip -j "windows-${NAME}-${VERSION}.zip" \
            "./zig-out/bin/${NAME}.exe" \
            "./zig-out/bin/${NAME}.pdb"

      - name: Build Windows MCL
        if: ${{ steps.check-version.outputs.EXISTS == '' }}
        run: |
          zig build \
            -Doptimize=ReleaseSafe \
            -Dmdfunc=$MDFUNC_PATH \
            -Dtarget=x86_64-windows-msvc
          zip -j "windows-mcl-${NAME}-${VERSION}.zip" \
            "./zig-out/bin/${NAME}.exe" \
            "./zig-out/bin/${NAME}.pdb"

      - name: Build Linux
        if: ${{ steps.check-version.outputs.EXISTS == '' }}
        run: |
          zig build -Doptimize=ReleaseSafe -Dtarget=x86_64-linux-gnu
          zip -j "linux-${NAME}-${VERSION}.zip" \
            "./zig-out/bin/${NAME}"

      - name: Create release
        if: ${{ steps.check-version.outputs.EXISTS == '' }}
        run: |
          gh release create --generate-notes "${VERSION}" \
            windows-${NAME}-${VERSION}.zip \
            windows-mcl-${NAME}-${VERSION}.zip \
            linux-${NAME}-${VERSION}.zip
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
